pwntools
	https://github.com/arthaud/python3-pwntools
	(install architecture for shellcoding on mac)
		https://github.com/Gallopsled/pwntools-binutils/
		brew install https://raw.githubusercontent.com/Gallopsled/pwntools-binutils/master/osx/binutils-$ARCH.rb

pwngdb
	https://github.com/scwuaptx/Pwngdb

peda
	https://github.com/longld/peda

r2 
	https://github.com/radare/radare2

main_arena
	https://github.com/bash-c/main_arena_offset

seccomp
	https://github.com/david942j/seccomp-tools

libc_database
	https://github.com/niklasb/libc-database


Useful Commands
	find string in binary
		strings -a -t x [FILE] | grep [STRING]

Settings
	ASLR settings :/proc/sys/kernel/randomize_va_space 
		0 : disabled
		2 : enabled	
		temporarily disable ASLR for file
			** setarch $(uname -m) -R [FILE]
	Common ELF compile options
		-m32
		-mpreferred-stack-boundary=[num]
		-no-pie -fPIE -pie
		-z,relro/now
		-z execstack/noexecstack
		-fstack-protector -fno-stack-protector

	Common mach-o compile options
		otool -hv
		-fpie -fno-pie
		-fstack-protector -fno-stack-protector

Some random tips
	any operation on func_address(ex. printf("%p\n",&func), void *a=&printf+1) forces func to become full relro(regardless of compile option)
	gcc -m32 and i386 are different! Though they may seem identical in some cases, but are not necessarily the same, for instance, if you look at the malloc behaviour, you will notice that while running on x64 machines, -m32 maintains a 0x8 bytes aligned heap, while i386 uses a 0x10 bytes aligned one.
